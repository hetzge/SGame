package de.hetzge.sgame.sync;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.function.Consumer;

public class SyncPool {

	private final Map<SpreadType, List<SyncMessage>> messageBuffer = new HashMap<>();
	private final Map<Long, SyncProperty<?>> syncProperties = new HashMap<>();

	public SyncPool() {
		for (SpreadType spread : Spread.values()) {
			this.messageBuffer.put(spread, new LinkedList<SyncMessage>());
		}
	}

	public void registerSyncProperty(SyncProperty<?> syncProperty){
		syncProperties.put(syncProperty.getId(), syncProperty);
	}
	
	public void addMessage(SpreadType spread, SyncMessage syncMessage) {
		this.messageBuffer.get(spread).add(syncMessage);
	}

	public void flush(SpreadType spread, Consumer<List<SyncMessage>> consumer) {
		consumer.accept(this.messageBuffer.get(spread));
		this.messageBuffer.get(spread).clear();
	}

}
