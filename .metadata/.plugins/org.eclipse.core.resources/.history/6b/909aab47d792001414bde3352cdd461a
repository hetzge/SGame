package de.hetzge.sgame.libgdx;

import org.lwjgl.opengl.GL11;

import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;

import de.hetzge.sgame.libgdx.renderable.LibGdxRenderableContext;
import de.hetzge.sgame.render.RenderConfig;

public class LibGdxApplication implements ApplicationListener {

	private SpriteBatch batch;
	private OrthographicCamera camera;
	private LibGdxRenderableContext libGdxRenderableContext;

	@Override
	public void create() {
		this.camera = new OrthographicCamera();
		this.batch = new SpriteBatch();
		this.libGdxRenderableContext = new LibGdxRenderableContext(this.batch);
		this.camera.setToOrtho(true, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());

		RenderConfig.INSTANCE.initRenderablePool.accept(RenderConfig.INSTANCE.renderablePool);
	}

	@Override
	public void resize(int width, int height) {
	}

	@Override
	public void render() {
		Gdx.gl.glClearColor(1, 1, 1, 1);
		Gdx.gl.glClear(GL11.GL_COLOR_BUFFER_BIT);

		this.batch.setProjectionMatrix(this.camera.combined);
		this.batch.begin();

		RenderConfig.INSTANCE.renderablePool.render(this.libGdxRenderableContext);

		this.batch.end();
	}

	@Override
	public void pause() {
	}

	@Override
	public void resume() {
	}

	@Override
	public void dispose() {
	}

}
